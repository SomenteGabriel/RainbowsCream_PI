<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANVV
        KwbWZziI1mY45dZnOP/WZzj/1mc4/9ZnOP/WZzj/1mc4/9ZnOP/WZzj/1mc4/9ZnOP/WZzj/1mY45dZn
        OIjVVSsGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1mc4iNZnOP/WZzj/1mc4/9ZnOP/WZzj/1mc4/9ZnOP/WZzj/1mc4/9ZnOP/WZzj/1mc4/9Zn
        OP/WZzj/1mc4/9VoOYcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADWZjjl1mc4/+uaQv/yqkX/8qpF//KqRf/yqkX/8qpF//KqRf/yqkX/8qpF//Kq
        Rf/yqkX/8qpF/+uaQf/WZzj/1mY45QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANZnOP/WZzj/8qpF//KqRf/yqkX/8qpF//KqRf/yqkX/8qpF//Kq
        Rf/yqkX/8qpF//KqRf/yqkX/8qpF/9ZnOP/WZzj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AB//wAAf/8AAH//AAB//wAAf//////////8=
</value>
  </data>
</root>